name: Build BabOSco

on:
  push:
    branches:
      - grub
  pull_request:
    branches:
      - grub

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up cross-compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y bison flex libgmp3-dev libmpfr-dev libmpc-dev texinfo nasm
        mkdir -p $HOME/opt
        cd $HOME/opt
        wget https://ftp.gnu.org/gnu/binutils/binutils-2.36.tar.gz
        tar -xzvf binutils-2.36.tar.gz
        cd binutils-2.36
        mkdir build
        cd build
        ../configure --target=i686-elf --prefix="$HOME/opt/cross" --disable-nls --disable-werror
        make
        make install
        cd $HOME/opt
        wget https://ftp.gnu.org/gnu/gcc/gcc-10.2.0/gcc-10.2.0.tar.gz
        tar -xzvf gcc-10.2.0.tar.gz
        cd gcc-10.2.0
        mkdir build
        cd build
        ../configure --target=i686-elf --prefix="$HOME/opt/cross" --disable-nls --enable-languages=c,c++ --without-headers
        make all-gcc
        make all-target-libgcc
        make install-gcc
        make install-target-libgcc
        echo "$HOME/opt/cross/bin" >> $GITHUB_PATH

    - name: Build Kernel
      run: |
        nasm -f elf multiboot.asm -o multiboot.o
        i686-elf-gcc -c kernel.c -o kernel.o -ffreestanding -O2 -Wall -Wextra
        i686-elf-gcc -T linker.ld -o kernel.bin -ffreestanding -O2 -nostdlib multiboot.o kernel.o -lgcc

    - name: Create Bootable ISO
      run: |
        sudo apt-get install -y mtools grub-pc-bin xorriso
        mkdir -p iso/boot/grub
        cp kernel.bin iso/boot/kernel.bin
        cp grub.cfg iso/boot/grub/grub.cfg
        grub-mkrescue -o BabOSco.iso iso

    - name: Upload ISO
      uses: actions/upload-artifact@v2
      with:
        name: BabOSco
        path: BabOSco.iso